{"remainingRequest":"C:\\Users\\86152\\VueProject\\bingbing\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\86152\\VueProject\\bingbing\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\86152\\VueProject\\bingbing\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86152\\VueProject\\bingbing\\src\\views\\special.vue?vue&type=template&id=12d429e2&","dependencies":[{"path":"C:\\Users\\86152\\VueProject\\bingbing\\src\\views\\special.vue","mtime":1627200047805},{"path":"C:\\Users\\86152\\VueProject\\bingbing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86152\\VueProject\\bingbing\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\86152\\VueProject\\bingbing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86152\\VueProject\\bingbing\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}